<style type="text/css">
#REGION .icon{
	float: right;
}

#REGION .form-wrap{
	height: 100%;
}

#REGION .panel-title{
	display: inline-block;
}

#REGION .form-title {
	margin-top: 0px;
}
#REGION .form {
	padding: 0px;
}

#REGION .common-tree{
	height:calc(100% - 89px);
    overflow: auto;
}

#REGION .region-wrapper{
	padding-left: 10px;
}
#REGION .btn{
	margin-right: 10px;
	min-width: 68px;
}

</style>

<div id="REGION" class="hidden">
	<div class="form-wrap ">
		<div class="form">
			<div class="form-info form-title">
				<div class="title form-text"></div>
				<!-- <button class="btn"  data-type="primary" normal  onclick="REGION.clickTitle(event,2)">渠道</button>

				<button class="btn"  data-type="primary" normal  onclick="REGION.clickTitle(event,2)">水库</button>

				<button class="btn"  data-type="primary" normal  onclick="REGION.clickTitle(event,2)">径流</button> -->

				<div class="toolbar toolbar-theme" onclick="REGION.addLevelOne(event);">
					<!-- <i class="fa fa-refresh region-refresh" title="refresh" ></i> -->

					<!-- <i class="fa fa-plus grid-plus" title="add"></i> -->
				</div>
			</div>

			<div style="margin:0.5rem">
				<input type="text" class="form-control" placeholder="输入关键字搜索" oninput="REGION.filterTree(event)">
			</div>

			<div class="common-tree"></div>
		</div>
	</div>

</div>


<script type="text/javascript">
var REGION = {
		selectIrrarea:function(event){
			var curRegion = RegionUtil.getRegionByEvent(event);
			var treeRegionId = curRegion.regionId+"_tree";
			curRegion.treeRegionId = treeRegionId;

			var outerRegion = RegionUtil.getOuterRegion(curRegion);
			var reqObj = new Object();
			reqObj.spId = outerRegion.treeSpId;			
			reqObj.module = outerRegion.treeModule;
			// reqObj.irrAreaId = curRegion.paraMap.get("irrAreaId");
			// reqObj.waterUnitId = curRegion.paraMap.get("waterUnitId");

			var reqPara = curRegion.paraMap.get("reqPara");
			if (reqPara){
				reqPara = JSON.parse(reqPara);
				for(x in reqPara)
					reqObj[x] = reqPara[x];
				//reqObj={...reqObj,...JSON.parse(reqPara)};
			}
			RegionUtil.call(outerRegion.treeRes,"POST",reqObj,function(serverResponse,dataPara){
				if(serverResponse.success){
					var listData = serverResponse.data;
					for(var i = 0 ;i<listData.length;i++){
						listData[i].pid = listData[i].pid;
						listData[i].label = listData[i].label;
					}
					curRegion.treeRegion.treeData = listData; 
					curRegion.treeRegion.renderMenu(listData);
					outerRegion.find(".content").empty();
					
				}
			})
		},
		filterTree:function(event){
			var targetElem = RegionUtil.getEventTarget(event);
			var curRegion = RegionUtil.getRegionByElem(targetElem);

			var treeRegion = RegionUtil.getRegionById(curRegion.treeRegionId);
			treeRegion.filterNode($(targetElem).val());
		},
		afterRenderData:function(){
			var curRegion = this;
			var outerRegion = RegionUtil.getOuterRegion(curRegion);
			
			if(!curRegion.inited)curRegion.inited = true;else return;

			curRegion.find(".title").text(outerRegion.treeTitle);

			var treeRegionId = curRegion.regionId+"_tree";
			curRegion.treeRegionId = treeRegionId;

			var reqObj = new Object();
			reqObj.spId = outerRegion.treeSpId;			
			reqObj.module = outerRegion.treeModule;
			// reqObj.irrAreaId = curRegion.paraMap.get("irrAreaId");
			// reqObj.waterUnitId = curRegion.paraMap.get("waterUnitId");

			var reqPara = curRegion.paraMap.get("reqPara");
			if (reqPara){
				reqPara = JSON.parse(reqPara);
				for(x in reqPara)
					reqObj[x] = reqPara[x];
				//reqObj={...reqObj,...JSON.parse(reqPara)};
			}
			
			var regionLoadedDefer = new jQuery.Deferred();
			RegionUtil.call(outerRegion.treeRes,"POST",reqObj,function(serverResponse,dataPara){
				if(serverResponse.success){
					var listData = serverResponse.data;
					for(var i = 0 ;i<listData.length;i++){
						listData[i].pid = listData[i].pid;
						listData[i].label = listData[i].label;
					}

					var def = RegionUtil.loadRegion(curRegion.find(".common-tree"),"common/shared/tree/simple-tree-readonly.rs?showDots=false",treeRegionId);
		            def.done(function(treeRegion){
						curRegion.treeRegion = treeRegion;
		                treeRegion.treeData = listData;
		                regionLoadedDefer.resolve();
		            });
				}
			})
			return regionLoadedDefer.promise();
		},
		addLevelOne:function(event){
			var curRegion = RegionUtil.getRegionByEvent(event);
			// var parentRegion = RegionUtil.getOuterRegion(curRegion);
			// parentRegion.addLevelOne(curRegion);
		}
};

RegionUtil.ready(function(){
	// var staticRegion = RegionUtil.newStaticRegion("#REGION");

	var res = {
		message:{
			dft:{
				spId:"spId",
			}
		},
		dataList:{
			dft:{
			}
		}
	};

	
	var staticRegion = RegionUtil.newFormRegion("#REGION",res);
	staticRegion.afterRenderData = REGION.afterRenderData;
	staticRegion.renderRegion();
})
</script>